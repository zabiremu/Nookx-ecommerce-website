$breakpoints: (
  xs: 320px,
  sm: 568px,
  custom767: 767px,
  md: 768px,
  custom991: 991px,
  custom1198: 1198px,
  lg: 1024px,
);

// Respond above.
@mixin respond-above($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }

  // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

// Respond above.
@mixin respond-below($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (max-width: $breakpoint-value) {
      @content;
    }

  // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@mixin transform-duration-5s {
    -webkit-transition: -webkit-transform .5s;
    transition: -webkit-transform .5s;
    -o-transition: transform .5s;
    transition: transform .5s;
    transition: transform .5s,-webkit-transform .5s;
}
@mixin transistion-duration-3s {
  transition: .3s;
	-moz-transition: .3s;
	-webkit-transition: .3s;
	-o-transition: .3s;
}
@mixin transistion-duration-2s {
  transition: .2s;
	-moz-transition: .2s;
	-webkit-transition: .2s;
	-o-transition: .2s;
}
@mixin background-properties($__cover:cover,$__no-repeat:no-repeat,$__center:center){
  background-size:$__cover;
  background-repeat:$__no-repeat;
  background-position:$__center;
}
@mixin margin-padding($__margin, $__padding) {
   margin: $__margin;
   padding:$__padding;
}
@mixin position($__position_value,$__top_value,$__right_value,$__bottom_value,$__left_value){
  position:$__position_value;
  top:$__top_value;
  right:$__right_value;
  bottom:$__bottom_value;
  left:$__left_value;
}	
@mixin topcenter {
  -webkit-transform: translate(0, -50%);
  -ms-transform: translate(0, -50%);
  transform: translate(0, -50%);
}

// Define vertical, horizontal, or both position
@mixin position-alignment($position) {
  position: $__absolute;
  
  @if $position == 'vertical' {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  }
  @else if $position == 'horizontal' {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);
  }
  @else if $position == 'both' {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
}

/** Extends **/

.flex-align-center {
  @extend %flex-align-center;
}

%flex-align-center{
  display: flex;
  display: -webkit-flex;
  align-items:center;
  -webkit-align-items:center;
  justify-content: center;
  -webkit-justify-content: center;
}
%flex-justify-end {
  display: flex;
  display: -webkit-flex;
  align-items:center;
  -webkit-align-items:end;
  justify-content: end;
  -webkit-justify-content: end;
}
%flex-space {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
}
.align-center {
  @extend %flex-center;
}

%flex-center { 
  display: flex;
  display: -webkit-flex;
  align-items:center;
  -webkit-align-items:center;
}
%flex {
  display: flex;
  display: -webkit-flex;
}
%qty-comman {
  width:40px;
  height:40px;
  text-align: center;
  padding: 5px;
  font-size: 24px;
}
@mixin qty-hover {
  background: $color-brand;
  border: 0;
  color: $color-white;
}

@mixin pass-eye {
  position: $__absolute;
  right: 17px;
  top: 50%;
  transform: translateY(-50%);
  color: $color-19;
  cursor: pointer;
}
